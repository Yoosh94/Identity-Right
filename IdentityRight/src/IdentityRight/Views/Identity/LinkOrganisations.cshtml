@*@model IEnumerable<IdentityRight.Models.ApplicationOrganisations>
@{
    ViewData["Title"] = "Add/Remove Organisation Links";
}*@

@model OrganisationsViewModel
@{
    ViewData["Title"] = "Add/Remove Organisation Links";
}
<div class="container">
    <h2>@ViewData["Title"].</h2>
    <br />
    <form class="navbar-form" role="search">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Search" name="srch-term" id="srch-term" oninput="searchOrganisation()">
            <div class="input-group-btn">
                <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
            </div>
        </div>
    </form>
    <div id="buttonsDiv">
        <button id="addOrg">&lt; ADD</button>
        <button id="removeOrg">REMOVE &gt;</button>
    </div>
    <form asp-controller="Identity" asp-action="SetLinks" method="post" class="form-horizontal" role="form">
        <div class="splitView" id="left-window">
            <h3>My Linked organisations</h3>
            <select multiple="multiple" id="leftSelect" asp-for="ReturnedIDs" asp-items="@Model.LinkedOrgs">
                @*@foreach (var item in Model.LinkedOrgs)
                    {
                        <option class="orgsOption" value="@item.Id">@Html.DisplayFor(modelItem => item.organisationName)</option>
                    }*@
            </select>
        </div>
        <div class="splitView" id="right-window">
            <h3>Available organisations</h3>
            <select multiple="multiple" id="rightSelect">
                @foreach (var item in Model.UnlinkedOrgs)
            {
                    <option class="orgsOption" value="@item.Id">@Html.DisplayFor(modelItem => item.organisationName)</option>
                }
            </select>
        </div>
        <button id="submitLinks" type="submit">Save</button>
    </form>
</div>


    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }
